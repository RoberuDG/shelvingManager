# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'NewShelving.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from turtle import position
from PyQt5 import QtCore, QtGui, QtWidgets
from shelvingManager.Backend.Controller.shelving_controller import ShelvingController
from shelvingManager.Backend.Controller.database_controller import DatabaseController
from shelvingManager.Backend.Controller.shelf_controller import ShelfController

class Ui_Dialog(object):
    MAX_DESCRIPTION_CHARACTERS = 255
    dbc = DatabaseController()
    sc = ShelvingController(dbc.conn)
    sfc = ShelfController(dbc.conn)

    shelvings = None
    room_id = None


    def setupUi(self, Dialog, row_count, column_count, room_id):
        self.room_id = room_id
        self.shelvings = self.sc.get_shelvings_by_room_id(room_id)
        Dialog.setObjectName("Dialog")
        Dialog.resize(1284, 590)
        Dialog.setInputMethodHints(QtCore.Qt.ImhFormattedNumbersOnly)
        Dialog.setFixedSize(1284, 590)
        self.horizontalLayoutWidget = QtWidgets.QWidget(Dialog)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(40, 10, 1201, 541))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout_4.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout_2.setSpacing(10)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMinimumSize(QtCore.QSize(50, 0))
        self.label.setMaximumSize(QtCore.QSize(50, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        spacerItem = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.textName = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textName.sizePolicy().hasHeightForWidth())
        self.textName.setSizePolicy(sizePolicy)
        self.textName.setMaximumSize(QtCore.QSize(150, 16777215))
        self.textName.setInputMethodHints(QtCore.Qt.ImhNone)
        self.textName.setMaxLength(3)
        self.textName.setCursorPosition(0)
        self.textName.setObjectName("textName")
        self.horizontalLayout.addWidget(self.textName)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_4 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_3.addWidget(self.label_4)
        self.etDescription = QtWidgets.QPlainTextEdit(self.horizontalLayoutWidget)
        self.etDescription.setMaximumSize(QtCore.QSize(16777215, 100))
        self.etDescription.setObjectName("etDescription")
        self.etDescription.textChanged.connect(self.limit_text)
        self.horizontalLayout_3.addWidget(self.etDescription)
        self.verticalLayout_2.addLayout(self.horizontalLayout_3)
        self.label_5 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setText("")
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_2.addWidget(self.label_5)
        self.line = QtWidgets.QFrame(self.horizontalLayoutWidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_2.addWidget(self.line)
        self.label_3 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_2.addWidget(self.label_3)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.radioButton_2 = QtWidgets.QRadioButton(self.horizontalLayoutWidget)
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_2.toggled.connect(self.radioButton_2_clicked)
        self.horizontalLayout_10.addWidget(self.radioButton_2)
        self.radioButton = QtWidgets.QRadioButton(self.horizontalLayoutWidget)
        self.radioButton.setObjectName("radioButton")
        self.radioButton.toggled.connect(self.radioButton_clicked)
        self.horizontalLayout_10.addWidget(self.radioButton)
        self.verticalLayout_2.addLayout(self.horizontalLayout_10)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.label_9 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_9.setObjectName("label_9")
        self.label_9.setMaximumSize(QtCore.QSize(200, 16777215))
        self.label_9.setSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        self.horizontalLayout_12.addWidget(self.label_9)
        self.spinBox_3 = QtWidgets.QSpinBox(self.horizontalLayoutWidget)
        self.spinBox_3.setObjectName("spinBox_3")
        self.horizontalLayout_12.addWidget(self.spinBox_3)
        self.verticalLayout_2.addLayout(self.horizontalLayout_12)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_7 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_9.addWidget(self.label_7)
        self.spinBox_2 = QtWidgets.QSpinBox(self.horizontalLayoutWidget)
        self.spinBox_2.setObjectName("spinBox_2")
        self.horizontalLayout_9.addWidget(self.spinBox_2)
        self.label_8 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_9.addWidget(self.label_8)
        self.spinBox = QtWidgets.QSpinBox(self.horizontalLayoutWidget)
        self.spinBox.setObjectName("spinBox")
        self.horizontalLayout_9.addWidget(self.spinBox)
        self.verticalLayout_2.addLayout(self.horizontalLayout_9)
        self.buttonBox = QtWidgets.QDialogButtonBox(self.horizontalLayoutWidget)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Save)
        self.buttonBox.setCenterButtons(True)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout_2.addWidget(self.buttonBox)
        self.horizontalLayout_4.addLayout(self.verticalLayout_2)
        self.tableWidgetShelving = QtWidgets.QTableWidget(self.horizontalLayoutWidget)
        self.tableWidgetShelving.setObjectName("tableWidget")
        self.tableWidgetShelving.setColumnCount(column_count)
        self.tableWidgetShelving.setRowCount(row_count)
        self.spinBox_3.setEnabled(False)
        self.spinBox_2.setEnabled(False)
        self.spinBox.setEnabled(False)
        self.label_9.setEnabled(False)
        self.label_7.setEnabled(False)
        self.label_8.setEnabled(False)
        self.tableWidgetShelving.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        h_header = self.tableWidgetShelving.horizontalHeader()
        h_header.setSectionResizeMode(QtWidgets.QHeaderView.Stretch)
        v_header = self.tableWidgetShelving.verticalHeader()
        v_header.setSectionResizeMode(QtWidgets.QHeaderView.Stretch)
        self.horizontalLayout_4.addWidget(self.tableWidgetShelving)
        self.retranslateUi(Dialog)
        self.spinBox.valueChanged.connect(self.draw_table)
        self.spinBox_2.valueChanged.connect(self.draw_table)
        self.spinBox_3.valueChanged.connect(self.draw_table)
        self.radioButton.toggled.connect(self.draw_table)
        self.radioButton_2.toggled.connect(self.draw_table)
        self.buttonBox.accepted.connect(self.control_shelving_position)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        self.deactivate_selection()
        self.tableWidgetShelving.clicked.connect(self.deactivate_selection)
        self.buttonBox.accepted.connect(self.insert_shelving)
        self.spinBox.valueChanged.connect(self.control_shelving_position)
        self.spinBox_2.valueChanged.connect(self.control_shelving_position)
        self.spinBox_3.valueChanged.connect(self.control_shelving_position)
        self.radioButton.toggled.connect(self.control_shelving_position)
        self.radioButton_2.toggled.connect(self.control_shelving_position)
        self.buttonBox.accepted.connect(Dialog.accept)
        self.buttonBox.setEnabled(False)
        self.buttonBox.rejected.connect(Dialog.reject)
        self.populate_table()

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Nueva estantería"))
        self.label.setText(_translate("Dialog", "Código:"))
        self.textName.setPlaceholderText(_translate("Dialog", "Max. 3 caracteres"))
        self.label_4.setText(_translate("Dialog", "Descripción:"))
        self.etDescription.setPlaceholderText(_translate("Dialog", "Max. 255 caracteres"))
        self.label_3.setText(_translate("Dialog", "Posición"))
        self.radioButton_2.setText(_translate("Dialog", "Horizontal"))
        self.radioButton.setText(_translate("Dialog", "Vertical"))
        self.label_9.setText(_translate("Dialog", "Fila / Columna"))
        self.label_7.setText(_translate("Dialog", "Inicio"))
        self.label_8.setText(_translate("Dialog", "Fin"))

    def control_shelving_position(self):
        occupied_cells = []
        if(self.spinBox.value() >= 1 and self.spinBox_2.value() >= 1 and self.spinBox_3.value() >= 1):
            for shelving in self.shelvings:
                position_occupied = self.sc.get_shelving_position(shelving.id)
                if(position_occupied[0][0] == position_occupied[1][0]):
                    for i in range(position_occupied[0][1], position_occupied[1][1] + 1):
                        occupied_cells.append((position_occupied[0][1], i))
                else:
                    for i in range(position_occupied[0][0], position_occupied[1][0] + 1):
                        occupied_cells.append((i, position_occupied[0][1]))
                insert_try = []

                if self.radioButton.isChecked():
                    for i in range(self.spinBox_2.value() - 1, self.spinBox.value()):
                        insert_try.append((i, self.spinBox_3.value() - 1))
                else:
                    for i in range(self.spinBox_2.value() - 1, self.spinBox.value()):
                        insert_try.append((self.spinBox_3.value() - 1, i))

            for i in occupied_cells:
                for j in insert_try:
                    if(j == i):
                        self.label_5.setText("<font color='red'>Ya hay una o más estanterías en esta posición.</font>")
                        self.buttonBox.setEnabled(False)
                        return
                    else:
                        self.label_5.setText("")
                        self.buttonBox.setEnabled(True)


    def insert_shelving(self):
        room_id = self.room_id
        code = self.textName.text()
        description = self.etDescription.toPlainText()
        if self.radioButton_2.isChecked():
            start = [self.spinBox_3.value() - 1, self.spinBox_2.value() - 1]
            end = [self.spinBox_3.value() - 1, self.spinBox.value() - 1]
        elif self.radioButton.isChecked():
            start = [self.spinBox_2.value() - 1, self.spinBox_3.value() - 1]
            end = [self.spinBox.value() - 1, self.spinBox_3.value() - 1]
        if code is not None and code != '':
            self.sc.insert_shelving(room_id, code, start, end, description)
            self.sfc.insert_shelf(room_id, code, start, end)

    def deactivate_selection(self):
        self.tableWidgetShelving.setSelectionMode(QtWidgets.QAbstractItemView.NoSelection)

    def radioButton_2_clicked(self):
        self.control_position()
        self.spinBox_3.setMaximum(self.tableWidgetShelving.columnCount())
        self.spinBox_3.setMinimum(1)
        self.spinBox_2.setMaximum(self.tableWidgetShelving.columnCount())
        self.spinBox.setMaximum(self.tableWidgetShelving.columnCount())
        self.spinBox_2.setMinimum(1)
        self.spinBox.setMinimum(1)

    def radioButton_clicked(self):
        self.control_position()
        self.spinBox_3.setMaximum(self.tableWidgetShelving.rowCount())
        self.spinBox_3.setMinimum(1)
        self.spinBox_2.setMaximum(self.tableWidgetShelving.rowCount())
        self.spinBox.setMaximum(self.tableWidgetShelving.rowCount())
        self.spinBox_2.setMinimum(1)
        self.spinBox.setMinimum(1)

    def control_position(self):
        self.spinBox_3.setEnabled(True)
        self.spinBox_2.setEnabled(True)
        self.spinBox.setEnabled(True)
        self.label_9.setEnabled(True)
        self.label_7.setEnabled(True)
        self.label_8.setEnabled(True)

    def draw_table(self):
        self.tableWidgetShelving.clear()
        if self.spinBox_2.value() >= self.spinBox.value():
            self.spinBox.setValue(self.spinBox_2.value())
        if self.radioButton_2.isChecked():
            self.tableWidgetShelving.setRangeSelected(QtWidgets.QTableWidgetSelectionRange(self.spinBox_3.value() - 1, self.spinBox_2.value() - 1, self.spinBox_3.value() - 1, self.spinBox.value() - 1), True)
        elif self.radioButton.isChecked():
            self.tableWidgetShelving.setRangeSelected(QtWidgets.QTableWidgetSelectionRange(self.spinBox_2.value() - 1, self.spinBox_3.value() - 1, self.spinBox.value() - 1, self.spinBox_3.value() - 1), True)
        self.populate_table()

    def populate_table(self):
        for shelving in self.shelvings:
            position_occupied = self.sc.get_shelving_position(shelving.id)
            if position_occupied[0][0] == position_occupied[1][0]:
                for i in range(position_occupied[0][1], position_occupied[1][1] + 1):
                    self.tableWidgetShelving.setItem(position_occupied[0][0], i, QtWidgets.QTableWidgetItem(shelving.code))
                    self.tableWidgetShelving.item(position_occupied[0][0], i).setBackground(QtGui.QColor(255, 0, 0))
            else:
                for i in range(position_occupied[0][0], position_occupied[1][0] + 1):
                    self.tableWidgetShelving.setItem(i, position_occupied[0][0], QtWidgets.QTableWidgetItem(shelving.code))
                    self.tableWidgetShelving.item(i, position_occupied[0][0]).setBackground(QtGui.QColor(0, 255, 0))

    def limit_text(self):
            text = self.etDescription.toPlainText()
            if text is not None:
                if len(text) > self.MAX_DESCRIPTION_CHARACTERS:
                    self.label_5.setText("<font color='red'>Max. 255 caracteres</font>")
                    self.etDescription.setPlainText(text[:255])
                elif len(text) == self.MAX_DESCRIPTION_CHARACTERS - 1:
                    self.label_5.setText("")


    def shelving_window(self, row_count, column_count, room_id):
        Dialog = QtWidgets.QDialog()
        ui = Ui_Dialog()
        ui.setupUi(Dialog, row_count, column_count, room_id)
        Dialog.show()
        Dialog.setWindowFlags(QtCore.Qt.WindowCloseButtonHint)
        Dialog.exec_()
